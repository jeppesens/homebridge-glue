{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { AccessoryPlugin, API, HAP, Logging, Service } from 'homebridge';\n\nimport { HomebridgeLockStatus } from './enum';\nimport axios, { AxiosInstance } from 'axios';\nimport { IGlueApiKeyResp, IGlueApiKeysResp, IConfig, IGlueCommandResp, IGlueLockStatusResp, LockOperationType, LockOperationStatus, GlueEventType } from './interface';\nimport { initiated } from './helpers';\n\nlet hap: HAP;\n\n\nexport default function( homebridge: API ) {\n    hap = homebridge.hap;\n    homebridge.registerAccessory( 'homebridge-glue', 'glue-lock', LockAccessory );\n}\n\n\nclass LockAccessory implements AccessoryPlugin {\n\n    private get name(): string {\n        return this.config.name || 'Glue Lock';\n    }\n\n    private _apiKey?: string;\n    private _client?: AxiosInstance;\n\n    private get client(): AxiosInstance {\n        if ( !this._client ) {\n            const client = axios.create( {\n                baseURL: 'https://user-api.gluehome.com',\n                timeout: 60000,\n            } );\n\n            client.interceptors.request.use( config => {\n                this.log.debug( `making ${config.method} to ${config.url} with request body ${config.data ? JSON.stringify( config.data, null, 2 ) : null}` );\n                if ( !this._apiKey || config.url.match( '/v1/api-keys' ) )\n                    config.auth = { username: this.config.username, password: this.config.password }\n                else\n                    config.headers.authorization = `Api-Key ${this._apiKey}`;\n                return config;\n            }, error => {\n                this.log.debug( error );\n                return Promise.reject( error );\n            } );\n\n            client.interceptors.response.use( resp => {\n                this.log.debug( `Resp ${JSON.stringify( resp.data, null, 2 )}` );\n                return resp;\n            }, error => {\n                this.log.debug( error.response );\n                if ( error.response?.status === 401 )\n                    process.kill( 1 );\n                return Promise.reject( error );\n            } )\n\n            this._client = client;\n        }\n        return this._client\n    }\n    private get lastEvent() {\n        return this.lock?.lastLockEvent?.eventTime ? new Date( this.lock.lastLockEvent.eventTime ) : new Date( 0 );\n    }\n    private _lock: IGlueLockStatusResp;\n    private set lock( lock: IGlueLockStatusResp ) {\n        this.log.debug( `Setting lock to ${JSON.stringify( lock, null, 2 )}` );\n        if ( lock.lastLockEvent && new Date( lock.lastLockEvent.eventTime ) > this.lastEvent ) {\n            this._lock = lock;\n            this.targetState = undefined;\n            this.lockService.setCharacteristic( hap.Characteristic.LockCurrentState, this.currentState );\n            if ( this.lock.batteryStatus )\n                this.batteryService.setCharacteristic( hap.Characteristic.BatteryLevel, this.lock.batteryStatus );\n            this.log.debug( `Set the lock to ${JSON.stringify( lock, null, 2 )}` );\n        }\n    }\n    private get lock(): IGlueLockStatusResp {\n        return this._lock;\n    }\n    private lockID: string;\n    private targetState: HomebridgeLockStatus;\n    private getTargetState() {\n        return this.targetState;\n    }\n    private lockService: Service = new hap.Service.LockMechanism( this.name );\n    private batteryService: Service = new hap.Service.BatteryService( this.name );\n\n    constructor( private log: Logging, private readonly config: IConfig ) {\n        if ( this.config['api-key'] )\n            this._apiKey = this.config['api-key'];\n        else if ( !this.config.username || !this.config.password )\n            throw new Error( 'Config requires api-key or a username and password' );\n        this.lockID = config['lock-id'];\n        /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n        this.init();\n    }\n\n    public getServices() {\n        return [this.lockService, this.batteryService];\n    }\n\n    public getCharging( callback: ( err: Error, resp?: 0 ) => void ) {\n        callback( null, hap.Characteristic.ChargingState.NOT_CHARGING );\n    }\n\n\n    public getState( callback: ( err: Error, resp?: HomebridgeLockStatus ) => void ) {\n        let state: HomebridgeLockStatus;\n        switch ( this.lock?.lastLockEvent?.eventType ) {\n        case 'pressAndGo':\n        case 'localLock':\n        case 'manualLock':\n        case 'remoteLock':\n            state = hap.Characteristic.LockCurrentState.SECURED;\n            break;\n        case 'localUnlock':\n        case 'manualUnlock':\n        case 'remoteUnlock':\n            state = hap.Characteristic.LockCurrentState.UNSECURED;\n            break;\n        case 'unknown':\n        default:\n            state = hap.Characteristic.LockCurrentState.UNKNOWN;\n        }\n        callback( null, state );\n    }\n\n    private get currentState(): HomebridgeLockStatus {\n        let val: HomebridgeLockStatus;\n        this.getState( ( err, vals ) => {\n            val = vals\n        } );\n        return val\n    }\n\n    @initiated\n    public async getBattery( callback: ( err: Error, resp?: number ) => void ) {\n        return this.getBatteryLevel()\n            .then( batteryLevel => callback( null, batteryLevel ) )\n            .catch( err => callback( err ) );\n    }\n\n    @initiated\n    public async getLowBattery( callback ) {\n        return this.getBatteryLevel()\n            .then( batteryLevel => ( batteryLevel >= 20 ) ? hap.Characteristic.StatusLowBattery.BATTERY_LEVEL_NORMAL : hap.Characteristic.StatusLowBattery.BATTERY_LEVEL_LOW )\n            .then( lowBattery => callback( null, lowBattery ) )\n            .catch( err => callback( err ) );\n    }\n\n    public async setState( command: HomebridgeLockStatus, callback: ( err: Error, resp?: undefined ) => void ) {\n        this.targetState = command;\n        this.log.debug( `Set state to ${command === HomebridgeLockStatus.UNSECURED ? 'unlocked' : 'locked'}` );\n        let callbackCalled = false;\n        const onSuccessfulChange = () => {\n            if ( callbackCalled ) return;\n            this.lock = ( {\n                lastLockEvent: {\n                    eventTime: new Date().toISOString(),\n                    eventType: command ? 'remoteLock' : 'remoteUnlock',\n                }\n            } as any as IGlueLockStatusResp );\n            callback( null );\n            callbackCalled = true;\n        }\n        await this.client.post<IGlueCommandResp>( `/v1/locks/${this.lockID}/operations`, {\n            type: command === HomebridgeLockStatus.UNSECURED ? LockOperationType.Unlock : LockOperationType.Lock,\n        } )\n            .then( resp => resp.data )\n            .then( async ( { status, id } ) => {\n                if ( status === LockOperationStatus.Completed ) { // Success\n                    onSuccessfulChange()\n                } else {\n                    for ( let start = new Date(); new Date( start.getTime() + 2 * 60 * 1000 ) > new Date(); ) {  // 2 min\n                        await this.client\n                            .get<IGlueCommandResp>( `/v1/locks/${this.lockID}/operations/${id}` )\n                            .then( r => r.data )\n                            .then( r => {\n                                switch ( r.status ) {\n                                case LockOperationStatus.Completed:\n                                    start = new Date( 0 );\n                                    return onSuccessfulChange();\n                                case LockOperationStatus.Timeout:\n                                case LockOperationStatus.Failed:\n                                    throw Error( r.reason );\n                                case LockOperationStatus.Pending:\n                                default:\n                                    return;\n                                }\n                            } )\n                    }\n                }\n            } )\n            .catch( err => {\n                this.log.debug( err );\n                callback( err );\n                return err.message;\n            } );\n    }\n\n    private listenToEvents() {\n        this.lockService\n            .getCharacteristic( hap.Characteristic.LockCurrentState )\n            .on( 'get', this.getState.bind( this ) );\n\n        this.lockService\n            .getCharacteristic( hap.Characteristic.LockTargetState )\n            .on( 'get', this.getTargetState.bind( this ) )\n            .on( 'set', this.setState.bind( this ) );\n\n        this.batteryService\n            .getCharacteristic( hap.Characteristic.BatteryLevel )\n            .on( 'get', this.getBattery.bind( this ) );\n\n        this.batteryService\n            .getCharacteristic( hap.Characteristic.StatusLowBattery )\n            .on( 'get', this.getLowBattery.bind( this ) );\n    }\n\n    private async getApiKey() {\n        const name = 'homebridge-glue key';\n        this.log( 'Did not find an API key in config, going to create one instead' );\n        const url = '/v1/api-keys';\n        const scopes = ['events.read', 'locks.read', 'locks.write'];\n        await this.client.get<IGlueApiKeysResp[]>( url )\n            .then( resp => resp.data.filter( key => key.name === name ) )\n            .then( generatedKeys => Promise\n                .all( generatedKeys.map( key => {\n                    this.log( `Deleting old api key with id ${key.id}` );\n                    return this.client.delete( `${url}/${key.id}` );\n                } ) )\n            );\n\n        this._apiKey = await this.client.post<IGlueApiKeyResp>( '/v1/api-keys', {\n            name,\n            scopes,\n        } )\n            .then( resp => resp.data )\n            .then( data => {\n                this.log( `Created api key for Glue with name ${data.name} and id ${data.id} with scopes ${scopes.join( ', ' )}` );\n                return data.apiKey;\n            } )\n            .catch( err => {\n                this.log( err );\n                this.log( 'Killing the process!' );\n                process.exit( 1 );\n            } )\n    }\n\n    private async init() {\n        this.log.debug( 'Initalizing Glue Lock' );\n        if ( !this._apiKey )\n            await this.getApiKey();\n        if ( !this.lockID )\n            await this.client.get<IGlueLockStatusResp[]>( '/v1/locks' )\n                .then( resp => resp.data )\n                .then( locks => {\n                    this.log( `There is ${locks.length} lock(s) available:` );\n                    locks.forEach( ( l, i ) => this.log( `Lock ${i + 1} with description ${l.description} and id ${l.id}` ) );\n                    this.log( `Will select the first lock, otherwise set it in config.json as: lock-id: '${locks[0].id}'` );\n                    const lock = locks[0];\n                    this.lockID = lock.id;\n                } );\n        await this.getLock();\n\n        this.lockService\n            .setCharacteristic( hap.Characteristic.Manufacturer, 'Jeppesen x Glue' )\n            .setCharacteristic( hap.Characteristic.SerialNumber, this.lock.serialNumber )\n            .setCharacteristic( hap.Characteristic.Name, this.config.name || this.lock.description )\n            .setCharacteristic( hap.Characteristic.FirmwareRevision, this.lock.firmwareVersion );\n\n        this.listenToEvents();\n\n        // setInterval( () =>\n        //     this.getLock(),\n        // 5 * 1000 );\n    }\n\n    @initiated\n    private async getLock(): Promise<IGlueLockStatusResp> {\n        this.lock = await this.client.get<IGlueLockStatusResp>( `/v1/locks/${this.lockID}` )\n            .then( resp => resp.data );\n        return this.lock;\n    }\n\n    @initiated\n    private async getBatteryLevel(): Promise<number> {\n        return this.getLock()\n            .then( lock => lock.batteryStatus )\n            .catch( err => {\n                this.log( `Error getting battery level ${err.message}.` );\n                return 0;\n            } );\n    }\n}\n"]}